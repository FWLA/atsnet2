<?php

namespace Proxies\__CG__\Atemschutz\NachweisBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Nachweis extends \Atemschutz\NachweisBundle\Entity\Nachweis implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setEinsatzNummer($einsatzNummer)
    {
        $this->__load();
        return parent::setEinsatzNummer($einsatzNummer);
    }

    public function getEinsatzNummer()
    {
        $this->__load();
        return parent::getEinsatzNummer();
    }

    public function setDate($date)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setLocation($location)
    {
        $this->__load();
        return parent::setLocation($location);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }

    public function setTime($time)
    {
        $this->__load();
        return parent::setTime($time);
    }

    public function getTime()
    {
        $this->__load();
        return parent::getTime();
    }

    public function setWork($work)
    {
        $this->__load();
        return parent::setWork($work);
    }

    public function getWork()
    {
        $this->__load();
        return parent::getWork();
    }

    public function setAtemschutzgeraetetraeger(\Atemschutz\NachweisBundle\Entity\Atemschutzgeraetetraeger $atemschutzgeraetetraeger = NULL)
    {
        $this->__load();
        return parent::setAtemschutzgeraetetraeger($atemschutzgeraetetraeger);
    }

    public function getAtemschutzgeraetetraeger()
    {
        $this->__load();
        return parent::getAtemschutzgeraetetraeger();
    }

    public function setAtemschutzgeraetewart(\Atemschutz\CoreBundle\Entity\User $atemschutzgeraetewart = NULL)
    {
        $this->__load();
        return parent::setAtemschutzgeraetewart($atemschutzgeraetewart);
    }

    public function getAtemschutzgeraetewart()
    {
        $this->__load();
        return parent::getAtemschutzgeraetewart();
    }

    public function setNachweisart(\Atemschutz\NachweisBundle\Entity\Nachweisart $nachweisart = NULL)
    {
        $this->__load();
        return parent::setNachweisart($nachweisart);
    }

    public function getNachweisart()
    {
        $this->__load();
        return parent::getNachweisart();
    }

    public function setEinsatzart(\Atemschutz\NachweisBundle\Entity\Einsatzart $einsatzart)
    {
        $this->__load();
        return parent::setEinsatzart($einsatzart);
    }

    public function getEinsatzart()
    {
        $this->__load();
        return parent::getEinsatzart();
    }

    public function setNotice($notice)
    {
        $this->__load();
        return parent::setNotice($notice);
    }

    public function getNotice()
    {
        $this->__load();
        return parent::getNotice();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getDateFormatted($format = 'd.m.Y')
    {
        $this->__load();
        return parent::getDateFormatted($format);
    }

    public function getExpiringDate()
    {
        $this->__load();
        return parent::getExpiringDate();
    }

    public function getExpiringDateFormatted($format = 'd.m.Y')
    {
        $this->__load();
        return parent::getExpiringDateFormatted($format);
    }

    public function isValid()
    {
        $this->__load();
        return parent::isValid();
    }

    public function expiresInLessThanOneMonth()
    {
        $this->__load();
        return parent::expiresInLessThanOneMonth();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'einsatzNummer', 'date', 'location', 'time', 'work', 'notice', 'nachweisart', 'einsatzart', 'atemschutzgeraetetraeger', 'atemschutzgeraetewart');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}